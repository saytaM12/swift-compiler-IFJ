#hlavni telo programu
<MAIN_BODY>   -> func [id](<PARAM>) <FUNCTION_TYPE> {<FUNC_BODY>} <MAIN_BODY>
<MAIN_BODY>   -> <BODY> <MAIN_BODY>
<MAIN_BODY>   -> <IF_MAIN_BODY> <MAIN_BODY>
<MAIN_BODY>   -> eps

# Telo funkce
<FUNC_BODY>  -> <BODY> <FUNCTION_BODY>
<FUNC_BODY>  -> if <IF_WHILE> {<FUNC_BODY>} else {<FUNC_BODY>} <FUNC_BODY>
<FUNC_BODY>  -> while [expression] {<FUNC_BODY>} <FUNC_BODY>
<FUNC_BODY>  -> return [expression]
<FUNC_BODY>  -> eps

# Telo pro IF/WHILE v MAIN
<IF_MAIN_BODY>   -> <BODY> <IF__MAIN_BODY>
<IF_MAIN_BODY>   -> if <IF_WHILE> {<IF_MAIN_BODY>} else {<IF_MAIN_BODY>}            
<IF_MAIN_BODY>   -> while <IF_WHILE> {<IF_MAIN_BODY>}         
<IF_MAIN_BODY>   -> eps

# Spolecne telo
<BODY>  -> [id](<CALL_PARAM>);
<BODY>  -> <DEF_VARIABLE> <ASSIGN>
<BODY>  -> [id] = [expression]
<BODY>  -> [id] = [id](<CALL_PARAM>)

# Pravidlo pro if/while
<IF_WHILE>    -> let [id]
<IF_WHILE>    -> [expression]

# Deinice promenne
<DEF_VARIABLE> -> let [id]
<DEF_VARIABLE> -> var [id]

# Prirazeni hodnoty/typu promenne
<ASSiGN>     -> = [expression]
<ASSIGN>     -> = [id](<CALL_PARAM>)
<ASSIGN>     -> : [type] <VALUE>

# Prirazeni hodnoty promenne (muze byt zadana jenom hodnota nebo jenom typ)
<VALUE>	     -> eps
<VALUE>      -> = [expression]
<VALUE>      -> = [id](<CALL_PARAM>)

# Prvni parametr funkce
<PARAM>	     -> eps
<PARAM>      -> <PARAM_TYPES> <NEXT_PARAM>

# Dalsi parametry funkce
<NEXT_PARAM> -> eps
<NEXT_PARAM> -> , <PARAM_TYPES> <NEXT_PARAM>

# Parametry volajici funkce
<CALL_PARAM> -> <CALL_PARAM_TYPES> <NEXT_CALL_PARAM>
<CALL_PARAM> -> eps

# Dalsi parametry volajici funkce
<NEXT_CALL_PARAM> -> , <CALL_PARAM_TYPES <NEXT_CALL_PARAM>
<NEXT_CALL_PARAM> -> eps

# Definice typu funkce
<FUNCTION_TYPE> -> eps
<FUNCTION_TYPE> -> -> [type]

# Typy parametru funkce ktera se definuje
<PARAM_TYPES> -> <PARAM_NAME> [id] : [type]

<PARAM_NAME> -> [name]
<PARAM_NAME> -> _
# Typy parametru volajici funkce
<CALL_PARAM_TYPES> -> [expression]
<CALL_PARAM_TYPES> -> [name]: [expression]
<CALL_PARAM_TYPES> -> _: [expression]
